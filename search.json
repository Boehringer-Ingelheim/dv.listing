[{"path":"/articles/disp.html","id":"how-to-set-up-a-dv-listings-module-using-dispatchers","dir":"Articles","previous_headings":"","what":"How to set up a dv.listings module using dispatchers","title":"Usage of dv.manager dispatchers","text":"Dispatchers helper functions allow accessing data utility functions inside module manager dynamic way. Refer ?dv.manager::mm_dispatch information functionalities. boxes show two examples can used set dv.listings module. Note possible use arguments, dataset_names dataset_disp, time mod_listings() call.","code":""},{"path":"/articles/disp.html","id":"a--filtered-data","dir":"Articles","previous_headings":"How to set up a dv.listings module using dispatchers","what":"a. Filtered data","title":"Usage of dv.manager dispatchers","text":"code piece produces essentially app behavior using dataset_names argument. , selection made user global filter menu affects module display.","code":"dv.listings::mod_listings(   module_id = \"mod2a\",   dataset_disp = dv.manager::mm_dispatch(     from = \"filtered_dataset\",     selection = c(\"adsl\", \"adae\", \"adtte\")   ) )"},{"path":"/articles/disp.html","id":"b--unfiltered-data","dir":"Articles","previous_headings":"How to set up a dv.listings module using dispatchers","what":"b. Unfiltered data","title":"Usage of dv.manager dispatchers","text":"case undesirable global filter settings affect listings displayed dv.listings module, possible define dispatcher delivers always unfiltered data. means global filter ignored!","code":"dv.listings::mod_listings(   module_id = \"mod2b\",   dataset_disp = dv.manager::mm_dispatch(     from = \"unfiltered_dataset\",     selection = c(\"adsl\", \"adae\", \"adtte\")   ) )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Boehringer-Ingelheim Pharma GmbH & Co.KG. Copyright holder, funder. Isabel Glauss. Author, maintainer. Korbinian Matthias. Author. Luis Morís Fernández. Author. Jessica Knizia. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Glauss , Matthias K, Morís Fernández L (2024). dv.listings: Data listings module. R package version 3.1.0.","code":"@Manual{,   title = {dv.listings: Data listings module},   author = {Isabel Glauss and Korbinian Matthias and Luis {Morís Fernández}},   year = {2024},   note = {R package version 3.1.0}, }"},{"path":"/index.html","id":"dvlistings","dir":"","previous_headings":"","what":"dv.listings","title":"dv.listings","text":"DaVinci’s dv.listings module displays arbitrary datasets listings. Users can select dataset shown, specify columns dataset displayed well order. displayed columns can sorted filtered. Moreover, table can filtered show entries containing keyword entered user. module limited usage one data source, notably, can handle data ADaM SDTM.  module prepared used combination dv.manager supports bookmarking functionality.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"dv.listings","text":"Feel free copy following code chunk install latest version dv.listings. Since dv.listings module intended used within application created means DaVinci’s dv.manager package, make sure installed dv.manager version number equally higher 2.1.0","code":"if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"Boehringer-Ingelheim/dv.listings\")"},{"path":"/index.html","id":"data-requirements","dir":"","previous_headings":"","what":"Data requirements","title":"dv.listings","text":"stated , dv.listings can display data various data sources, (limited ) SDTM ADaM. However, order column filters work, columns need converted appropriate types, e.g. categorial data stored factors, numbers numeric, etc. easiest way convert data using convert_data() comes along package. example can found section . Note dv.listings drops row names. case dataset equipped informative row names required displayed, include manually scope preprocessing. example:","code":"my_data <- datasets::mtcars my_data[[\"index\"]] <- rownames(my_data) attributes(my_data$index)$label <- \"Former row names\""},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"dv.listings","text":"define app containing dv.listings using dv.manager, need load data, make sure provided data comply requirements dv.listings, define list modules, launch app via run_app() dv.manager. following example contains listed steps. data protection purposes, example uses dummy data pharmaverseadam package.","code":"library(dv.listing)  # 1. Create a data list with example data data_list <- list(   adsl  = pharmaverseadam::adsl,   adae  = pharmaverseadam::adae,   adtte = pharmaverseadam::adtte_onco )  # 2. Preprocessing # Convert data to appropriate types data_list$adsl <- convert_data(data_list$adsl) data_list$adae <- convert_data(data_list$adae) data_list$adtte <- convert_data(data_list$adtte)  # Assign meaningful labels to data domain names attributes(data_list$adsl)$label <- \"Subject Level\" attributes(data_list$adae)$label <- \"Adverse Events\" attributes(data_list$adtte)$label <- \"Time-to-Event\"  # Specify default variables default_vars <- list(   adsl = c(\"STUDYID\", \"USUBJID\", \"SITEID\", \"ARM\"),   adae = c(\"STUDYID\", \"ASTDY\", \"AENDT\", \"AESER\") )  # 3. Module list module_list <- list(   \"Exemplary Table\" = mod_listings(     module_id = \"mod1\",     dataset_names = c(\"adsl\", \"adae\", \"adtte\"),     default_vars = default_vars   ) )  # 4. Launch the app dv.manager::run_app(   data = list(\"MyData\" = data_list),   module_list = module_list,   filter_data = \"adsl\" )"},{"path":"/index.html","id":"export-functionality","dir":"","previous_headings":"","what":"Export functionality","title":"dv.listings","text":"dv.listings module allows users export listings. Users option either download currently displayed listing available listings. downloading currently active listing, listing saved displayed, either .xlsx .pdf format. case filters applied, downloaded file reflect include filtered data. users wish download listings, module allows saving .xlsx format exclusively. process disregards local filters, listing saved separate worksheet within file Please aware PDF download feature implemented using RMarkdown file rendered PDF LaTeX. , important note LaTeX installation, along necessary packages, required use feature.","code":""},{"path":"/reference/calculate_col_width.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — calculate_col_width","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — calculate_col_width","text":"Shortens splits column labels necessary, adapts entries reference column vector easier handling, determines width reference columns data frame columns upcoming pdf generation. Widths given amount characters.","code":""},{"path":"/reference/calculate_col_width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — calculate_col_width","text":"","code":"calculate_col_width(df, ref)"},{"path":"/reference/calculate_col_width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — calculate_col_width","text":"df [data.frame] single data frame named columns. ref [character(0+)] character vector whose entries specify selection columns df. format entries follows: name [label].","code":""},{"path":"/reference/calculate_col_width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — calculate_col_width","text":"transformed reference column vector whose entries include solely column names (ref), splitted labels vectors stored within list (label_vecs), maximal column widths data frame columns (width_max), maximal column widths reference columns (ref_width), maximal column widths non-reference columns dataframe (width), table width exclusively row names (table_width), logical indicating whether reference columns specification valid (check_ref_cols).","code":""},{"path":"/reference/convert_data.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is a wrapper for utils::type.convert() to keep column labels — convert_data","title":"This function is a wrapper for utils::type.convert() to keep column labels — convert_data","text":"Converts data types data.frame columns logical, integer, numeric, complex, character factor appropriate. Re-assigns column labels converting data type.","code":""},{"path":"/reference/convert_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is a wrapper for utils::type.convert() to keep column labels — convert_data","text":"","code":"convert_data(dataset)"},{"path":"/reference/convert_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function is a wrapper for utils::type.convert() to keep column labels — convert_data","text":"dataset [data.frame] Single data.frame convert column data types","code":""},{"path":"/reference/convert_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function is a wrapper for utils::type.convert() to keep column labels — convert_data","text":"data.frame converted data types data.frame columns","code":""},{"path":"/reference/excel_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function which performs the download as .xlsx file. — excel_export","title":"Internal helper function which performs the download as .xlsx file. — excel_export","text":"export datasets listed within data_to_download separate Excel worksheet. Column names datasets extended labels.","code":""},{"path":"/reference/excel_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function which performs the download as .xlsx file. — excel_export","text":"","code":"excel_export(data_to_download, file, intended_use_label)"},{"path":"/reference/excel_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function which performs the download as .xlsx file. — excel_export","text":"data_to_download [list(data.frame)] list data frames downloaded. file [character(1)] string specifying filename ending \".xlsx\".","code":""},{"path":"/reference/export_modal_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function that specifies the content of the download modal dialogue. — export_modal_content","title":"Internal helper function that specifies the content of the download modal dialogue. — export_modal_content","text":"Internal helper function specifies content download modal dialogue.","code":""},{"path":"/reference/export_modal_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function that specifies the content of the download modal dialogue. — export_modal_content","text":"","code":"export_modal_content(ns, file_name, cond, colnames, activate_checkbox = FALSE)"},{"path":"/reference/export_modal_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function that specifies the content of the download modal dialogue. — export_modal_content","text":"ns function expects ID returns namespaced ID, usually generated shiny::NS(). file_name [character(1)] string containing initial file name. cond [character(1)] string containing JavaScript expression evaluated determine whether conditionalPanel displayed. colnames [character(0+)] character vector containing reference column choices. activate_checkbox [logical(1)] boolean indicating whether checkbox activated . Default FALSE.","code":""},{"path":"/reference/export_modal_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function that specifies the content of the download modal dialogue. — export_modal_content","text":"shiny tagList.","code":""},{"path":"/reference/fill_default_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to set missing default columns — fill_default_vars","title":"Internal helper function to set missing default columns — fill_default_vars","text":"Avoid empty displays case default columns specified showing first six columns dataset. dataset contain less six columns, whole dataset displayed.","code":""},{"path":"/reference/fill_default_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to set missing default columns — fill_default_vars","text":"","code":"fill_default_vars(default_vars, dataset)"},{"path":"/reference/fill_default_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to set missing default columns — fill_default_vars","text":"default_vars [list(character(0+))] Named list character vectors contain names columns displayed module launch per dataset. List entries named according dataset names can NULL datasets. dataset [list(data.frame)] list data.framish dataset(s) shown tabular format.","code":""},{"path":"/reference/fill_default_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to set missing default columns — fill_default_vars","text":"Named list character vectors Contain names columns displayed module launch every dataset. List entries named according dataset names.","code":""},{"path":"/reference/generate_choices.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to generate either column or dataset choices for the corresponding UI dropdown menues — generate_choices","title":"Internal helper function to generate either column or dataset choices for the corresponding UI dropdown menues — generate_choices","text":"Internal helper function generate either column dataset choices corresponding UI dropdown menues","code":""},{"path":"/reference/generate_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to generate either column or dataset choices for the corresponding UI dropdown menues — generate_choices","text":"","code":"generate_choices(dataset)"},{"path":"/reference/generate_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to generate either column or dataset choices for the corresponding UI dropdown menues — generate_choices","text":"dataset [data.frame | list(data.frame)] Single data.frame retrieve column labels list data.frames retrieve name labels. cases labels pasted column/dataset names returned order provide meaningful choices corresponding dropdown menues end-user.","code":""},{"path":"/reference/generate_choices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to generate either column or dataset choices for the corresponding UI dropdown menues — generate_choices","text":"Character vector type <name> [<label>]. Adds \"label\" placeholder missing labels.","code":""},{"path":"/reference/get_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to gather either column or name labels of data.frames — get_labels","title":"Internal helper function to gather either column or name labels of data.frames — get_labels","text":"Internal helper function gather either column name labels data.frames","code":""},{"path":"/reference/get_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to gather either column or name labels of data.frames — get_labels","text":"","code":"get_labels(dataset)"},{"path":"/reference/get_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to gather either column or name labels of data.frames — get_labels","text":"dataset [data.frame | list(data.frame)] Single data.frame gather column labels list data.frames gather name labels.","code":""},{"path":"/reference/get_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to gather either column or name labels of data.frames — get_labels","text":"Character vector labels dataset. Named respective column data.frame names. Contains \"label\" missing labels.","code":""},{"path":"/reference/listings_UI.html","id":null,"dir":"Reference","previous_headings":"","what":"A module that displays datasets as listings — listings_UI","title":"A module that displays datasets as listings — listings_UI","text":"module displays given dataset listing. allows switching datasets receives one.","code":""},{"path":"/reference/listings_UI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A module that displays datasets as listings — listings_UI","text":"","code":"listings_UI(module_id)  listings_server(   module_id,   dataset_list,   default_vars = NULL,   dataset_metadata,   pagination = NULL,   intended_use_label = NULL )"},{"path":"/reference/listings_UI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A module that displays datasets as listings — listings_UI","text":"module_id Shiny id dataset_list [shiny::reactive(list(data.frame)] reactive list data.framish dataset(s) shown listing. default_vars [list(characters(1+)) | NULL] list character vectors contain variable names displayed default per dataset. Named according dataset_names. NULL, first six variables displayed dataset. dataset_metadata [list(character(1), character(1+))] list following two elements: dataset_metadata$name() containing reactive string specifying name selected dataset dataset_metadata$date_range() containing reactive character vector two entries specifying earliest latest modification date dataset. Usually obtained module manager. pagination [logical(1) | NULL] Either boolean indicating pagination activated, NULL pagination activated large datasets (nrows > 1000) automatically. intended_use_label [character(1) | NULL] Either character indicating intended use download, NULL. label provided shown download also included downloaded file.","code":""},{"path":"/reference/listings_UI.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"A module that displays datasets as listings — listings_UI","text":"listings_server():","code":""},{"path":[]},{"path":"/reference/mock_listings_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Mock app without layout — mock_listings_app","title":"Mock app without layout — mock_listings_app","text":"mock_listings_app launches mock app dv.listings shiny module. development purposes.","code":""},{"path":"/reference/mock_listings_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mock app without layout — mock_listings_app","text":"","code":"mock_listings_app(mode = \"single\")"},{"path":"/reference/mock_listings_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mock app without layout — mock_listings_app","text":"mode Character value indicates whether include one multiple datasets. either \"single\" \"multi\".","code":""},{"path":[]},{"path":"/reference/mock_listings_mm.html","id":null,"dir":"Reference","previous_headings":"","what":"Mock app integrated in the module manager — mock_listings_mm","title":"Mock app integrated in the module manager — mock_listings_mm","text":"mock_listings_mm launches mock app dv.listings shiny module means module manager (dv.manager).","code":""},{"path":"/reference/mock_listings_mm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mock app integrated in the module manager — mock_listings_mm","text":"","code":"mock_listings_mm()"},{"path":[]},{"path":"/reference/mock_simple_listing_mm.html","id":null,"dir":"Reference","previous_headings":"","what":"Mock function for simple listing — mock_simple_listing_mm","title":"Mock function for simple listing — mock_simple_listing_mm","text":"Mock function simple listing","code":""},{"path":"/reference/mock_simple_listing_mm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mock function for simple listing — mock_simple_listing_mm","text":"","code":"mock_simple_listing_mm()"},{"path":"/reference/mod_export_listings_UI.html","id":null,"dir":"Reference","previous_headings":"","what":"Create user interface for the export listings shiny module of dv.listings — mod_export_listings_UI","title":"Create user interface for the export listings shiny module of dv.listings — mod_export_listings_UI","text":"Create user interface export listings shiny module dv.listings","code":""},{"path":"/reference/mod_export_listings_UI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create user interface for the export listings shiny module of dv.listings — mod_export_listings_UI","text":"","code":"mod_export_listings_UI(module_id)"},{"path":"/reference/mod_export_listings_UI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create user interface for the export listings shiny module of dv.listings — mod_export_listings_UI","text":"module_id [character(1)] unique ID string create namespace. Must match ID mod_exp_listings_server().","code":""},{"path":"/reference/mod_export_listings_UI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create user interface for the export listings shiny module of dv.listings — mod_export_listings_UI","text":"shiny uiOutput element.","code":""},{"path":"/reference/mod_export_listings_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Create server for export listings shiny module of dv.listings — mod_export_listings_server","title":"Create server for export listings shiny module of dv.listings — mod_export_listings_server","text":"Create server export listings shiny module dv.listings","code":""},{"path":"/reference/mod_export_listings_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create server for export listings shiny module of dv.listings — mod_export_listings_server","text":"","code":"mod_export_listings_server(   module_id,   dataset_metadata,   dataset_list,   data,   data_selection_name,   current_rows,   intended_use_label )"},{"path":"/reference/mod_export_listings_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create server for export listings shiny module of dv.listings — mod_export_listings_server","text":"module_id [character(1)] unique ID string create namespace. Must match ID mod_exp_listings_UI(). dataset_metadata [list(character(1), character(1+))] list following two elements: dataset_metadata$name() containing reactive string specifying name selected dataset dataset_metadata$date_range() containing reactive character vector two entries specifying earliest latest modification date dataset. Usually obtained module manager. dataset_list [shiny::reactive(list(data.frame))] reactive list named datasets. Usually obtained module manager. data [shiny::reactive(list(data.frame, character(0+)))] reactive list following two elements: data()$data containing single data frame data()$col_names containing column names data()$data. data_selection_name [shiny::reactive(character(1))] reactive string specifying name data()$data. current_rows [shiny::reactive(character(0+))] reactive integer vector containing selection row numbers data()$data. intended_use_label [character(1) | NULL] Either character indicating intended use download, NULL. label provided shown download also included downloaded file.","code":""},{"path":"/reference/mod_listings.html","id":null,"dir":"Reference","previous_headings":"","what":"Data listings function for module manager — mod_listings","title":"Data listings function for module manager — mod_listings","text":"module present dataset tabular form using DT package.","code":""},{"path":"/reference/mod_listings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data listings function for module manager — mod_listings","text":"","code":"mod_listings(   module_id,   dataset_names,   default_vars = NULL,   pagination = NULL,   intended_use_label =     \"Use only for internal review and monitoring during the conduct of clinical trials.\",   dataset_disp )"},{"path":"/reference/mod_listings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data listings function for module manager — mod_listings","text":"module_id [character(1)] Unique module_id identifier. can contain alphanumeric characters underscores. dataset_names [character(1+)] Name(s) dataset(s) displayed. Can used together parameter dataset_disp. default_vars [list(characters(1+)) | NULL] list character vectors contain variable names displayed default per dataset. Named according dataset_names. NULL, first six variables displayed dataset. pagination [logical(1) | NULL] Either boolean indicating pagination activated, NULL pagination activated large datasets (nrows > 1000) automatically. intended_use_label [character(1) | NULL] Either character indicating intended use download, NULL. label provided shown download also included downloaded file. dataset_disp [dv.manager::mm_dispatch()] advanced usage. mm_dispatch object. Can used together parameter dataset_names.","code":""},{"path":[]},{"path":"/reference/mod_listings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data listings function for module manager — mod_listings","text":"","code":"if (FALSE) { # interactive() library(dv.listings)  # 1. Create a data list with example data data_list <- list( adsl  = pharmaverseadam::adsl, adae  = pharmaverseadam::adae, adtte = pharmaverseadam::adtte_onco )  # 2. Preprocessing # Convert data to appropriate types data_list$adsl <- convert_data(data_list$adsl) data_list$adae <- convert_data(data_list$adae) data_list$adtte <- convert_data(data_list$adtte)  # Assign meaningful labels to data domain names attributes(data_list$adsl)$label <- \"Subject Level\" attributes(data_list$adae)$label <- \"Adverse Events\" attributes(data_list$adtte)$label <- \"Time-to-Event\"  # Specify default variables default_vars <- list(   adsl = c(\"STUDYID\", \"USUBJID\", \"SITEID\", \"ARM\"),   adae = c(\"STUDYID\", \"ASTDY\", \"AENDT\", \"AESER\") )  # 3. Module list module_list <- list(   \"Exemplary listings\" = mod_listings(     module_id = \"mod1\",     dataset_names = c(\"adsl\", \"adae\", \"adtte\"),     default_vars = default_vars   ) )  # 4. Launch the app dv.manager::run_app(  data = list(\"MyData\" = data_list),  module_list = module_list,  filter_data = \"adsl\" ) }"},{"path":"/reference/pack_of_constants.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a collection of named constants — pack_of_constants","title":"Build a collection of named constants — pack_of_constants","text":"Build collection named constants","code":""},{"path":"/reference/pack_of_constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a collection of named constants — pack_of_constants","text":"","code":"pack_of_constants(...)"},{"path":"/reference/pack_of_constants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a collection of named constants — pack_of_constants","text":"... Named parameters collected constants","code":""},{"path":"/reference/pack_of_constants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build a collection of named constants — pack_of_constants","text":"Shiny uses strings IDs link UI server elements. E.g: foo_UI(id = ns(\"foo\")) ... foo_server(id = \"foo\") pattern makes easy programmers fall trap modifying one instance string literal \"foo\" without modifying rest unaware problem bug hit. also easy mistakes uses \"foo\" identifier uses (text labels, ...) , often case, parameter explicitly named. One easy fix consists using global variables instead plain string literals. case previous example, mean: ID_FOO <- \"foo\" foo_UI(ns(ID_FOO)) ... foo_server(ID_FOO) simple addition makes purpose ID_FOO clear also fails gracefully ID_FOO instances updated synchronously along codebase. drawback polluting global namespace identifier variables. easily solved creating container constants, purpose pack_of_constants alias. ID <- pack_of_constants(FOO = \"foo\", BAR = \"bar\") ID$FOO \"foo\" ID$BA NULL","code":""},{"path":"/reference/pdf_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function which performs the download as .pdf file. — pdf_export","title":"Internal helper function which performs the download as .pdf file. — pdf_export","text":"export dataset listed within data_to_download PDF file.","code":""},{"path":"/reference/pdf_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function which performs the download as .pdf file. — pdf_export","text":"","code":"pdf_export(   data_to_download,   ref_cols,   file,   metadata,   active_session = TRUE,   intended_use_label )"},{"path":"/reference/pdf_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function which performs the download as .pdf file. — pdf_export","text":"data_to_download [list(data.frame)] named list containing one data frame downloaded. #' @param ref [character(0+)] character vector whose entries specify selection columns dataset download. format entries follows: name [label]. file [character(1)] string specifying filename ending \".pdf\". metadata [character(3)] character vector specifying dataset's name, date, additional footnote text. active_session [logical(1)] Logical value indicates helper function used within shiny session. yes, parts displaying progress bar get activated. Defaults TRUE.","code":""},{"path":"/reference/pdf_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function which performs the download as .pdf file. — pdf_export","text":"Number PDF pages generated.","code":""},{"path":"/reference/pdf_preprocessing.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to divide a data frame into smaller data frames that fit on one PDF page each — pdf_preprocessing","title":"Internal helper function to divide a data frame into smaller data frames that fit on one PDF page each — pdf_preprocessing","text":"Needed preprocessing step PDF creation means RMarkdown can take place.","code":""},{"path":"/reference/pdf_preprocessing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to divide a data frame into smaller data frames that fit on one PDF page each — pdf_preprocessing","text":"","code":"pdf_preprocessing(df, ref)"},{"path":"/reference/pdf_preprocessing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to divide a data frame into smaller data frames that fit on one PDF page each — pdf_preprocessing","text":"df [data.frame] single data frame named columns. ref [character(0+)] character vector whose entries specify selection columns df. format entries follows: name [label].","code":""},{"path":"/reference/pdf_preprocessing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to divide a data frame into smaller data frames that fit on one PDF page each — pdf_preprocessing","text":"Named list containing list data frames (list_of_df) whose entries fit one PDF page .","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/prep_export_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function for preparing the dataset(s) to download. — prep_export_data","title":"Internal helper function for preparing the dataset(s) to download. — prep_export_data","text":"Internal helper function preparing dataset(s) download.","code":""},{"path":"/reference/prep_export_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function for preparing the dataset(s) to download. — prep_export_data","text":"","code":"prep_export_data(   data_selection,   current_data,   data_selection_name,   dataset_list )"},{"path":"/reference/prep_export_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function for preparing the dataset(s) to download. — prep_export_data","text":"data_selection [character(1)] Either \"single\" \"\" depending whether currently displayed dataset (current_data) datasets (dataset_list) downloaded. current_data [data.frame] single data frame named columns. data_selection_name [character(1)] string specifying name current_data. dataset_list [list(data.frame)] list named datasets.","code":""},{"path":"/reference/prep_export_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function for preparing the dataset(s) to download. — prep_export_data","text":"Named list containing data frames now ready download.","code":""},{"path":"/reference/set_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data as it should be displayed in the module — set_data","title":"Prepare data as it should be displayed in the module — set_data","text":"Reduces dataset columns specified selector produces descriptive column names adding labels variable names.","code":""},{"path":"/reference/set_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data as it should be displayed in the module — set_data","text":"","code":"set_data(base_data, selector)"},{"path":"/reference/set_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data as it should be displayed in the module — set_data","text":"base_data [data.frame] Single data.frame. selector [character(0+)] Character vector selection column names base_data.","code":""},{"path":"/reference/set_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data as it should be displayed in the module — set_data","text":"list tree elements: data data.frame prepared displayed -. col_names vector column names created combining variable names labels. row_names character vector containing number corresponding row.","code":""},{"path":"/reference/set_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to set labels for all dataset columns — set_labels","title":"Internal helper function to set labels for all dataset columns — set_labels","text":"Internal helper function set labels dataset columns","code":""},{"path":"/reference/set_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to set labels for all dataset columns — set_labels","text":"","code":"set_labels(dataset, labels)"},{"path":"/reference/set_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to set labels for all dataset columns — set_labels","text":"dataset [data.frame] Single data.frame labels Character vector labels named respective column names dataset.","code":""},{"path":"/reference/set_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to set labels for all dataset columns — set_labels","text":"data.frame column labels","code":""},{"path":"/reference/set_up_datatable.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to set up colnames, rownames, and paging arguments for DT's datatable.\nMain purpose is to easily test returned arguments. — set_up_datatable","title":"Internal helper function to set up colnames, rownames, and paging arguments for DT's datatable.\nMain purpose is to easily test returned arguments. — set_up_datatable","text":"Internal helper function set colnames, rownames, paging arguments DT's datatable. Main purpose easily test returned arguments.","code":""},{"path":"/reference/set_up_datatable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to set up colnames, rownames, and paging arguments for DT's datatable.\nMain purpose is to easily test returned arguments. — set_up_datatable","text":"","code":"set_up_datatable(dataset, selected_cols, pagination)"},{"path":"/reference/set_up_datatable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to set up colnames, rownames, and paging arguments for DT's datatable.\nMain purpose is to easily test returned arguments. — set_up_datatable","text":"dataset [data.frame] Single data.frame selected_cols [character(0+)] Character vector selection column names dataset pagination [logical(1) | NULL] Either boolean indicating pagination activated, NULL pagination activated large datasets (nrows > 1000) automatically.","code":""},{"path":"/reference/set_up_datatable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to set up colnames, rownames, and paging arguments for DT's datatable.\nMain purpose is to easily test returned arguments. — set_up_datatable","text":"List containing character vectors column names row names logical value de-/activating paging","code":""},{"path":"/reference/shorten_entries.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to cut strings that exceed a specific length — shorten_entries","title":"Internal helper function to cut strings that exceed a specific length — shorten_entries","text":"Shortens strings long denotes cutting pasting \"...\" end string.","code":""},{"path":"/reference/shorten_entries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to cut strings that exceed a specific length — shorten_entries","text":"","code":"shorten_entries(vec, len_max)"},{"path":"/reference/shorten_entries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to cut strings that exceed a specific length — shorten_entries","text":"vec [character(0+)] character vector containing strings cut exceeding maximal length. len_max [integer(1)] integer specifying maximal length, must equal greater 3.","code":""},{"path":"/reference/shorten_entries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to cut strings that exceed a specific length — shorten_entries","text":"character vector containing shortened strings case exceeded maximal length.","code":""},{"path":"/reference/simple_listing.html","id":null,"dir":"Reference","previous_headings":"","what":"A module that displays a single dataset in a table form — simple_listing","title":"A module that displays a single dataset in a table form — simple_listing","text":"module shows given dataset table form.","code":""},{"path":"/reference/simple_listing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A module that displays a single dataset in a table form — simple_listing","text":"","code":"simple_listing_UI(module_id)  simple_listing_server(module_id, dataset)  mod_simple_listing(dataset_disp, module_id)"},{"path":"/reference/simple_listing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A module that displays a single dataset in a table form — simple_listing","text":"module_id [character(1)] Unique module_id identifier. can contain alphanumeric characters underscores. dataset data.framish dataset shown table dataset_disp mm_dispatch object.","code":""},{"path":"/reference/simple_listing.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"A module that displays a single dataset in a table form — simple_listing","text":"simple_listing_UI(): UI simple_listing_server(): server mod_simple_listing(): module","code":""},{"path":"/reference/split_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — split_label","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — split_label","text":"Shortens splits column label necessary, fits label_width rows column.","code":""},{"path":"/reference/split_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — split_label","text":"","code":"split_label(label, min_width, max_width, label_width)"},{"path":"/reference/split_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — split_label","text":"label [character(1)] string representing label. min_width [integer(1)] integer specifying minimal width column (less 1). max_width [integer(1)] integer specifying maximal width column (greater 3 also less min_width [integer(1)]). label_width [integer(1)] integer specifying maximal number rows allocated label (less 1).","code":""},{"path":"/reference/split_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — split_label","text":"list containing label_vec includes splitted label actual width col_width.","code":""},{"path":"/reference/warn_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function for warnings in case of missing/wrong selections done by the user. — warn_function","title":"Internal helper function for warnings in case of missing/wrong selections done by the user. — warn_function","text":"Triggers warning feedback particular condition true hides feedback false using shinyFeedback.","code":""},{"path":"/reference/warn_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function for warnings in case of missing/wrong selections done by the user. — warn_function","text":"","code":"warn_function(cond, input_id, text)"},{"path":"/reference/warn_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function for warnings in case of missing/wrong selections done by the user. — warn_function","text":"cond [logical(1)] Logical value indicates whether warning triggered (TRUE) (FALSE). input_id [character(1)] ID string indicating input field warning appear. text [character(1)] string containing warning message displayed.","code":""},{"path":"/news/index.html","id":"dvlistings-310","dir":"Changelog","previous_headings":"","what":"dv.listings 3.1.0","title":"dv.listings 3.1.0","text":"package renamed dv.listings","code":""}]
